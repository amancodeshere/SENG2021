openapi: 3.0.0
info:
  title: Invoice Generation API
  description: |
    API for generating invoices in UBL 2.1 XML format and validating them
  version: 1.0.0
 
servers:
  - url: http://localhost:3000/v1/api
    description: Local development server
  - url:
    description: Deployed server

tags:
  - name: Working routes
    description: Routes for the API which are functioning
  - name: In progress routes
    description: Routes for the API which are still under development

paths:
  /admin/register:
    post:
      summary: Register a new business account
      description: Subscribe to the invoice generation service by registering a business account
      tags:
        - Working routes
      operationId: adminRegister
      requestBody:
        description: Business details and password for the account
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessName:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                businessName: "Candlecraft Pty Ltd"
                email: "candle.craft@gmail.com"
                password: "candles123"
      responses:
        "200":
          $ref: "#/components/responses/SessionId"
        "400":
          description: Invalid input provided - email is not valid, account for this business already exists, businessName has invalid characters (valid characters are alphanumeric, spaces and special characters including [.,'-&()])
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /admin/login:
    post:
      summary: Login to the business account
      tags:
        - Working routes
      operationId: adminLogin
      requestBody:
        description: Email and password to login to business account
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: "candle.craft@gmail.com"
                password: "candles123"
      responses:
        "200":
          $ref: "#/components/responses/SessionId"
        "400":
          description: Invalid input provided - no account with this email exists, password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /admin/logout:
    post:
      summary: Logout from an active session
      tags:
        - Working routes
      operationId: adminLogout
      requestBody:
        description: sessionId of the active session to logout from
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: integer
              example:
                sessionId: 53896565
      responses:
        "200":
          description: User successfully logged out
        "401":
          $ref: "#/components/responses/Unauthorised"
  /health:
    get:
      summary: Indicates the aliveness of the service
      tags:
        - Working routes
      operationId: getHealth
      responses:
        "200":
          description: Service is running successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  serviceUptime:
                    type: string
                  memoryUsage:
                    type: string
                  database:
                    type: string
                example:
                  status: "ok"
                  serviceUptime: "1 hour, 12 minutes"
                  memoryUsage: "30MB"
                  database: "connected"
        "500":
          description: Service is unavailable and there was an internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "The database is unreachable"    
  /invoice:
    post:
      summary: Add new invoice
      description: Use data from a document (e.g. order document) to create an invoice resource
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: addInvoice
      requestBody:
        description: Order used to create invoice resource
        required: true
        content:
          application/xml:
            schema:
              $ref: "#/components/schemas/Order"
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Invoice resource created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: integer
                example:
                  invoiceId: 28746393
        "400":
          description: Invalid input provided - not in the correct format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/Unauthorised"
  /invoice/{invoiceid}/xml:
    get:
      summary: Converts an invoice resource into UBL XML
      description: Converts invoice with the given invoiceid to UBL XML format and returns it
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: invoiceToXml
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: integer
          description: The id used to identify invoice resource
      responses:
        "200":
          description: Invoice in XML successfully generated
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/InvoiceXml"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorised"
  /invoice/validate:
    post:
      summary: Submits an invoice for validation
      description: Validates that invoice in XML matches UBL formatting and schema
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: invoiceValidate
      requestBody:
        description: Invoice in xml to validate
        required: true
        content:
          application/xml:
            schema:
              $ref: "#/components/schemas/InvoiceXml"
      responses:
        "200":
          description: Invoice successfully received for validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  validated:
                    type: boolean
                  message:
                    type: string
                example:
                  validated: true
                  message:  "Invoice is in valid UBL 2.1 XML format"
        "400":
          description: Invalid input provided - not in XML format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error" 
        "401":
          $ref: "#/components/responses/Unauthorised"
  /invoice/list:
    get:
      summary: Lists all invoices created by the user
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: listInvoices
      responses:
        "200":
          $ref: "#/components/responses/InvoiceList"
        "401":
          $ref: "#/components/responses/Unauthorised"
  /invoice/filter:
    get:
      summary: View invoices filtered by invoiceEndDate
      description: Lists invoices created by the user with specified invoiceEndDate
      tags:
        - In progress routes
      security:
        - Authentication: []
      operationId: filterInvoices
      parameters:
        - name: invoiceEndDate
          in: query
          required: true
          schema:
            type: string
          description: invoiceEndDate to search for invoices in "YYYY-MM-DD" format
      responses:
        "200":
          $ref: "#/components/responses/InvoiceList"
        "400":
          description: Invalid input provided - invoiceEndDate not in correct format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/Unauthorised"
  /invoice/{invoiceid}:
    get:
      summary: View an invoice
      description:  View an invoice using its invoiceid
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: viewInvoice
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: integer
          description: The id used to identify invoice resource
      responses:
        "200":
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorised"
    put:
      summary: Update information in an invoice
      description: Update provided information about an invoice resource
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: updateInvoice
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: integer
          description: The id used to identify invoice resource
      requestBody:
        description: Details for updating an invoice resource
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toUpdate:
                  type: string
                  enum:
                    - payableAmount
                    - itemAmount
                    - itemDescription
                    - invoiceStartDate
                    - invoiceEndDate
                newData:
                  type: string
              example:
                toUpdate: payableAmount
                newData: "$130.00"
      responses:
        "200":
          description: Invoice successfully updated
        "400":
          description: Invalid input provided - newData is the same as current data, newData is an empty string or invalid (e.g. negative), toUpdate value is not part of Enum
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorised"

components:
  securitySchemes:
    Authentication:
      type: apiKey
      in: header
      name: sessionid
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      example:
        error: "message to describe the error"
    Order:
      type: object
      properties:
        salesOrderId:
          type: integer
        issueDate:
          type: integer
        sellerParty:
          type: object
          properties:
            name:
              type: string
            contact:
              type: string
        buyerParty:
          type: object
          properties:
            name:
              type: string
            contact:
              type: string
        deliveryAddress:
          type: string
        deliveryPeriod:
          type: string
        deliveryTerms:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              itemId:
                type: integer
              description:
                type: string
              unitPrice:
                type: number
              amount:
                type: integer
        totalPayableAmount:
          type: number
    InvoiceXml:
      type: object
      xml:
        name: invoice
      properties:
        invoiceId:
          type: integer
        type:
          type: string
          enum:
            - "original"
            - "copy"
        issueDate:
          type: string
        invoiceStartDate:
          type: string
        invoiceEndDate:
          type: string
        sellerPartyName:
          type: string
        buyerPartyName:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              itemId:
                type: integer
              description:
                type: string
              unitPrice:
                type: number
              amount:
                type: integer
        totalPayableAmount:
          type: number
    Invoice:
      type: object
      properties:
        invoiceId:
          type: integer
        issueDate:
          type: string
        buyerParty:
          type: string
        payableAmount:
          type: string
      example:
        invoiceId: 28746393
        invoiceStartDate: "2025-01-22"
        invoiceEndDate: "2025-02-22"
        buyerPartyName: "Candlecraft Pty Ltd"
        payableAmount: “$1200.00”

  responses:
    NotFound:
      description: An invoice with the given invoiceid was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    SessionId:
      description: Id for the user's current logged in session
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionId:
                type: integer
            example:
              sessionId: 53896565
    Unauthorised:
      description: Unauthorised - sessionId is not valid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InvoiceList:
      description: Successful retrieval of invoices list
      content:
        application/json:
          schema:
            type: object
            properties:
              invoices:
                type: array
                items: 
                  $ref: "#/components/schemas/Invoice"
